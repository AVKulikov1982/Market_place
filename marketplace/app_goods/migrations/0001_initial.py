# Generated by Django 3.2.13 on 2022-08-06 10:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app_shops', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='наименование')),
                ('category_icon', models.FileField(null=True, upload_to='icons/categories/', verbose_name='иконка категории')),
                ('slug', models.SlugField(help_text='уникальный фрагмент url на основе наименования товара', max_length=255, verbose_name='url')),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub', to='app_goods.category', verbose_name='родительская категория')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'db_table': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_price', models.DecimalField(decimal_places=2, help_text='базовая цена товара', max_digits=10, verbose_name='цена товара')),
                ('discounted_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='цена товара со скидкой')),
            ],
            options={
                'verbose_name': 'цена',
                'verbose_name_plural': 'цены',
                'db_table': 'prices',
            },
        ),
        migrations.CreateModel(
            name='PriceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='наименование типа цены', max_length=200, verbose_name='наименование')),
                ('discount', models.PositiveSmallIntegerField(blank=True, default=0, help_text='скидка в %', null=True, verbose_name='скидка')),
                ('start_date', models.DateTimeField(blank=True, help_text='дата и время начала действия скидки', null=True, verbose_name='начало акции')),
                ('end_date', models.DateTimeField(blank=True, help_text='дата и время окончания действия скидки', null=True, verbose_name='конец акции')),
                ('active', models.BooleanField(default=True, verbose_name='активна')),
            ],
            options={
                'verbose_name': 'тип цены',
                'verbose_name_plural': 'типы цен',
                'db_table': 'price_types',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='наименование')),
                ('slug', models.SlugField(help_text='уникальный фрагмент url на основе наименования товара', max_length=255, verbose_name='url')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('quantity', models.PositiveSmallIntegerField(null=True, verbose_name='количество товара')),
                ('availability', models.BooleanField(default=True, verbose_name='в наличии')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата и время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата и время обновления')),
                ('views_count', models.IntegerField(default=0, verbose_name='количество просмотров')),
                ('category', models.ManyToManyField(related_name='products', to='app_goods.Category', verbose_name='категория')),
                ('price', models.ForeignKey(help_text='связь с моделью Price', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app_goods.price', verbose_name='цена')),
                ('shop', models.ManyToManyField(related_name='products', to='app_shops.Shop', verbose_name='магазин')),
            ],
            options={
                'verbose_name': 'товар',
                'verbose_name_plural': 'товары',
                'db_table': 'goods',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default=None, max_length=254, verbose_name='email')),
                ('text', models.TextField(max_length=5000, verbose_name='сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата и время создания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_goods.product', verbose_name='товар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'отзывы',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_image', models.ImageField(blank=True, help_text='основное изображение товара', null=True, upload_to='product_image/', verbose_name='изображение товара')),
                ('side_image', models.ImageField(blank=True, null=True, upload_to='product_image/', verbose_name='вид сбоку')),
                ('back_image', models.ImageField(blank=True, null=True, upload_to='product_image/', verbose_name='вид сзади')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='app_goods.product', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'изображение товара',
                'verbose_name_plural': 'изображения товаров',
                'db_table': 'product_images',
            },
        ),
        migrations.AddField(
            model_name='price',
            name='price_type',
            field=models.ForeignKey(help_text='связь с моделью PriceType', on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='app_goods.pricetype', verbose_name='тип цены'),
        ),
    ]
